{"version":3,"sources":["Components/Flow/Node/index.js","Components/Flow/index.js","Components/Flow/Edge/index.js","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","NodeWrapper","styled","div","nodeTypes","normal","data","variant","className","xmlns","class","width","height","viewBox","fill","stroke","d","cx","cy","r","title","type","position","id","answers","map","item","index","text","edgeTypes","custom","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","style","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","href","fontSize","startOffset","textAnchor","initialElements","React","useState","elements","setElements","useEffect","backgroundColor","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","animated","strokeWidth","console","log","onElementClick","e","Object","keys","alert","x","y","dragHandle","source","target","label","App","Flow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d93d201.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\nimport styled from 'styled-components';\r\n\r\nconst primaryColor = '#15295c';\r\nconst drawerColor = \"#b3b3b3\";\r\n\r\nconst NodeWrapper = styled.div`\r\n    border: 1px solid #ccc;\r\n    border-left: 0;\r\n    border-right: 0;\r\n    cursor: default;\r\n    position: relative;\r\n    background-color: #fff;\r\n    //overflow: hidden;\r\n    //border-radius: .25em;\r\n    .drag-handle{\r\n        cursor: move;\r\n        display: flex;\r\n        border-bottom: 1px solid  ${primaryColor};\r\n        padding: .25em .75em;\r\n        color: #fff;\r\n        background-color: ${primaryColor};\r\n        .handle{\r\n            display: flex;\r\n            align-items: center;\r\n            width: max-content;\r\n            margin-right: .25em;\r\n        }\r\n        &:hover{\r\n            .drawer-icon{\r\n                filter: brightness(1.25);\r\n            }\r\n        }\r\n    }\r\n    .in-handle{\r\n        border-radius: 0;\r\n        border-radius: .25em 0 0 .25em;\r\n        background-color: #ffab71;\r\n        border: none;\r\n        width: 1em;\r\n        transition: all .25s;\r\n        height: calc(100% + 2px);\r\n        position: absolute;\r\n        left: -1em;\r\n        &:hover{\r\n            filter: brightness(1.25);\r\n        }\r\n    }\r\n    .out-handle{\r\n        border-radius: 0;\r\n        border-radius: 0 .25em .25em 0;\r\n        background-color: #5ed1d8;\r\n        border: none;\r\n        width: 1em;\r\n        transition: all .25s;\r\n        height: calc(100% + 2px);   \r\n        position: absolute;\r\n        right: -1em;\r\n        &:hover{\r\n            filter: brightness(1.25);\r\n        }\r\n    }\r\n    .drawer-icon{\r\n        stroke:  ${drawerColor};\r\n        transition: all .25s;\r\n    }\r\n    .answers{\r\n        padding: 0;\r\n        padding-top: .5em;\r\n        margin: 0;\r\n        .answer{\r\n            list-style: none;\r\n            cursor: pointer;\r\n            color: #15295c;\r\n            border-bottom: 1px solid #f0f0f0;\r\n            transition: all .25s;\r\n            background-color: #ddd;\r\n            padding: .25em 1em;\r\n            margin-left: .5em;\r\n            margin-right: .5em;\r\n            margin-bottom: .5em;\r\n            position: relative;\r\n            padding-left: 1.5em;\r\n            margin-left: 1.25em;\r\n            text-transform: capitalize;\r\n            &:hover{\r\n                color: #15295c;\r\n            }\r\n            .count-circle{\r\n                height: 2em;\r\n                border-radius: 50%;\r\n                background-color: ${primaryColor};\r\n                position: absolute;\r\n                left: -1em;\r\n                top: calc(50% - 1em);\r\n                width: 2em;\r\n                box-sizing: border-box;\r\n                border: 3px solid #fff;\r\n                color: #fff;\r\n                font-size: 1em;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst NormalNode = ({ data, variant='' }) => {\r\n\r\n    return (\r\n      <NodeWrapper>\r\n        <div className='test'>\r\n            <span className=\"drag-handle\">\r\n                <div className='handle'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-grip-vertical drawer-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                        <circle cx=\"9\" cy=\"5\" r=\"1\" />\r\n                        <circle cx=\"9\" cy=\"12\" r=\"1\" />\r\n                        <circle cx=\"9\" cy=\"19\" r=\"1\" />\r\n                        <circle cx=\"15\" cy=\"5\" r=\"1\" />\r\n                        <circle cx=\"15\" cy=\"12\" r=\"1\" />\r\n                        <circle cx=\"15\" cy=\"19\" r=\"1\" />\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    {data.title}\r\n                </div>\r\n            </span>\r\n        </div>\r\n        <Handle \r\n            type=\"target\" \r\n            position=\"left\" \r\n            id={`in-${data.id}`} \r\n            className={'in-handle'} \r\n        />\r\n\r\n        <ul className={'answers'}>\r\n            {data.answers.map((item, index)=>{\r\n                return (\r\n                    <li key={index} className={'answer'}>\r\n                        {item.text}\r\n                        <div className={'count-circle'}>\r\n                            {index+1}\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        \r\n        <Handle\r\n            type=\"source\"\r\n            position=\"right\"\r\n            id={`out-${data.id}`}\r\n            className={'out-handle'} \r\n        />\r\n      </NodeWrapper>\r\n    );\r\n  };\r\n\r\n  export { NormalNode };","import React from 'react';\r\nimport Edge from './Edge';\r\nimport { NormalNode } from './Node';\r\nimport ReactFlow, { removeElements, addEdge } from 'react-flow-renderer';\r\n\r\nconst nodeTypes = {\r\n  normal: NormalNode,\r\n};\r\n\r\nconst edgeTypes = {\r\n  custom: Edge,\r\n};\r\n\r\nexport default ({ initialElements=[] }) => {\r\n\r\n  const [elements, setElements] = React.useState(initialElements);\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n  const onConnect = (params) => {\r\n    setElements((els) => addEdge({\r\n      ...params, \r\n      animated: true,\r\n      style: { \r\n        stroke: '#15295c', \r\n        strokeWidth:3 \r\n      },\r\n    }\r\n    , els));\r\n    console.log(params)\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    setElements(initialElements);\r\n  },[initialElements])\r\n\r\n  return (\r\n    <div style={{ height: '100vh', backgroundColor: '#f0f0f0' }}>\r\n\r\n      <ReactFlow\r\n        elements={elements}\r\n        onElementsRemove={onElementsRemove}\r\n        onConnect={onConnect}\r\n        nodeTypes={nodeTypes}      \r\n        edgeTypes={edgeTypes} \r\n        onElementClick={(e)=>{\r\n          console.log('event handler',Object.keys(e), e.type==='click')\r\n          if(e.type==='click')\r\n            alert('Click')\r\n        }}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { getBezierPath, getMarkerEnd } from 'react-flow-renderer';\r\n\r\nexport default ({\r\n  id,\r\n  sourceX,\r\n  sourceY,\r\n  targetX,\r\n  targetY,\r\n  sourcePosition,\r\n  targetPosition,\r\n  style = {},\r\n  data,\r\n  arrowHeadType,\r\n  markerEndId,\r\n}) => {\r\n  \r\n  const edgePath = getBezierPath({ sourceX, sourceY, sourcePosition, targetX, targetY, targetPosition });\r\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\r\n\r\n  return (\r\n    <>\r\n      <path id={id} style={{...style}} className=\"react-flow__edge-path\" d={edgePath} markerEnd={markerEnd}/>\r\n      <text>\r\n        <textPath href={`#${id}`} style={{ fontSize: '12px' }} startOffset=\"50%\" textAnchor=\"middle\">\r\n          {data.text} \r\n        </textPath>\r\n      </text>\r\n    </>\r\n  );\r\n}","import './App.css';\nimport Flow from './Components/Flow';\n\nconst sampleAnswers = [\n  {\n    text:'Pregunta 1'\n  },\n  {\n    text:'Pregunta 2'\n  },\n  {\n    text:'Pregunta 3'\n  },\n  {\n    text:'pregunta 4'\n  },\n]\n\nconst initialElements = [\n  {\n    id: '1',\n    type: 'normal',\n    position: { x: 100, y: 100 },\n    data: { title:'Titulo de la pregunta', id:1, answers:[...sampleAnswers] },\n    dragHandle: '.drag-handle'\n  },  \n  {\n    id: '2',\n    type: 'normal',\n    position: { x: 100, y: 100 },\n    data: { title:'Titulo de la pregunta', id:2, answers:[] },\n    dragHandle: '.drag-handle'\n  }, \n  {\n    id: '3',\n    type: 'normal',\n    position: { x: 100, y: 100 },\n    data: { title:'Titulo de la pregunta', id:3, answers:[] },\n    dragHandle: '.drag-handle'\n  }, \n  {\n    id: '4',\n    type: 'normal',\n    position: { x: 100, y: 100 },\n    data: { title:'Titulo de la pregunta', id:4, answers:[] },\n    dragHandle: '.drag-handle'\n  }, \n  {\n    id: '5',\n    type: 'normal',\n    position: { x: 100, y: 100 },\n    data: { title:'Titulo de la pregunta', id:5, answers:[] },   \n    dragHandle: '.drag-handle' \n  },   \n  {\n    id: 'edges-e3-5',\n    source: '4',\n    target: '5',\n    label: 'Yes',\n    animated: true,\n    style: { stroke: '#15295c', strokeWidth:3 },\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Flow\n        initialElements={initialElements}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}